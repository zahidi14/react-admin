{"ast":null,"code":"import { combineReducers } from 'redux';\nimport resources, { getResources as resourceGetResources, getReferenceResource as resourceGetReferenceResource } from './resource';\nimport loading from './loading';\nimport notifications from './notifications';\nimport references, { getPossibleReferenceValues as referencesGetPossibleReferenceValues } from './references';\nimport ui from './ui';\nimport customQueries from './customQueries';\nexport default combineReducers({\n  resources: resources,\n  customQueries: customQueries,\n  loading: loading,\n  notifications: notifications,\n  references: references,\n  ui: ui\n});\nexport var getPossibleReferenceValues = function (state, props) {\n  return referencesGetPossibleReferenceValues(state.references, props);\n};\nexport var getResources = function (state) {\n  return resourceGetResources(state.resources);\n};\nexport var getReferenceResource = function (state, props) {\n  return resourceGetReferenceResource(state.resources, props);\n};\nexport { getPossibleReferences } from './references';","map":null,"metadata":{},"sourceType":"module"}