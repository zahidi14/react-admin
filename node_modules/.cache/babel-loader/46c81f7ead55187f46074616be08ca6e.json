{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useChoices } from 'ra-core';\nvar useStyles = makeStyles({\n  checkbox: {\n    height: 32\n  }\n});\n\nvar CheckboxGroupInputItem = function (_a) {\n  var id = _a.id,\n      choice = _a.choice,\n      onChange = _a.onChange,\n      optionText = _a.optionText,\n      optionValue = _a.optionValue,\n      translateChoice = _a.translateChoice,\n      value = _a.value,\n      rest = __rest(_a, [\"id\", \"choice\", \"onChange\", \"optionText\", \"optionValue\", \"translateChoice\", \"value\"]);\n\n  var classes = useStyles({});\n\n  var _b = useChoices({\n    optionText: optionText,\n    optionValue: optionValue,\n    translateChoice: translateChoice\n  }),\n      getChoiceText = _b.getChoiceText,\n      getChoiceValue = _b.getChoiceValue;\n\n  var choiceName = getChoiceText(choice);\n  return React.createElement(FormControlLabel, {\n    htmlFor: id + \"_\" + getChoiceValue(choice),\n    key: getChoiceValue(choice),\n    onChange: onChange,\n    control: React.createElement(Checkbox, __assign({\n      id: id + \"_\" + getChoiceValue(choice),\n      color: \"primary\",\n      className: classes.checkbox,\n      checked: value ? value.find(function (v) {\n        return v == getChoiceValue(choice);\n      }) !== // eslint-disable-line eqeqeq\n      undefined : false,\n      value: String(getChoiceValue(choice))\n    }, rest)),\n    label: choiceName\n  });\n};\n\nexport default CheckboxGroupInputItem;","map":null,"metadata":{},"sourceType":"module"}