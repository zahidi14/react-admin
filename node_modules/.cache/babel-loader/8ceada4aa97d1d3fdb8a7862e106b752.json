{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nvar useStyles = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    root: (_a = {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'flex-start',\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(1),\n      minHeight: theme.spacing(5)\n    }, _a[theme.breakpoints.up('xs')] = {\n      paddingLeft: 0,\n      paddingRight: 0\n    }, _a[theme.breakpoints.down('sm')] = {\n      paddingRight: theme.spacing(2)\n    }, _a[theme.breakpoints.down('xs')] = {\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.paper\n    }, _a)\n  };\n});\n\nvar TopToolbar = function (_a) {\n  var className = _a.className,\n      children = _a.children,\n      rest = __rest(_a, [\"className\", \"children\"]);\n\n  var classes = useStyles();\n  return React.createElement(Toolbar, __assign({\n    className: classnames(classes.root, className)\n  }, rest), children);\n};\n\nTopToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nexport default TopToolbar;","map":null,"metadata":{},"sourceType":"module"}