{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { showNotification } from '../actions/notificationActions';\n/**\n * Hook for Notification Side Effect\n *\n * @example\n *\n * const notify = useNotify();\n * // simple message (info level)\n * notify('Level complete');\n * // specify level\n * notify('A problem occurred', 'warning')\n * // pass arguments to the translation function\n * notify('Deleted %{count} elements', 'info', { smart_count: 23 })\n * // show the action as undoable in the notification\n * notify('Post renamed', 'info', {}, true)\n */\n\nvar useNotify = function () {\n  var dispatch = useDispatch();\n  return useCallback(function (message, type, messageArgs, undoable) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (messageArgs === void 0) {\n      messageArgs = {};\n    }\n\n    if (undoable === void 0) {\n      undoable = false;\n    }\n\n    dispatch(showNotification(message, type, {\n      messageArgs: messageArgs,\n      undoable: undoable\n    }));\n  }, [dispatch]);\n};\n\nexport default useNotify;","map":null,"metadata":{},"sourceType":"module"}