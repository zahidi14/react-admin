{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { cloneElement, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { sanitizeListRestProps } from 'ra-core';\nimport TopToolbar from '../layout/TopToolbar';\nimport { CreateButton, ExportButton } from '../button';\n\nvar ListActions = function (_a) {\n  var currentSort = _a.currentSort,\n      className = _a.className,\n      resource = _a.resource,\n      filters = _a.filters,\n      displayedFilters = _a.displayedFilters,\n      exporter = _a.exporter,\n      filterValues = _a.filterValues,\n      permanentFilter = _a.permanentFilter,\n      hasCreate = _a.hasCreate,\n      basePath = _a.basePath,\n      selectedIds = _a.selectedIds,\n      onUnselectItems = _a.onUnselectItems,\n      showFilter = _a.showFilter,\n      total = _a.total,\n      rest = __rest(_a, [\"currentSort\", \"className\", \"resource\", \"filters\", \"displayedFilters\", \"exporter\", \"filterValues\", \"permanentFilter\", \"hasCreate\", \"basePath\", \"selectedIds\", \"onUnselectItems\", \"showFilter\", \"total\"]);\n\n  return useMemo(function () {\n    return React.createElement(TopToolbar, __assign({\n      className: className\n    }, sanitizeListRestProps(rest)), filters && cloneElement(filters, {\n      resource: resource,\n      showFilter: showFilter,\n      displayedFilters: displayedFilters,\n      filterValues: filterValues,\n      context: 'button'\n    }), hasCreate && React.createElement(CreateButton, {\n      basePath: basePath\n    }), exporter !== false && React.createElement(ExportButton, {\n      disabled: total === 0,\n      resource: resource,\n      sort: currentSort,\n      filter: __assign({}, filterValues, permanentFilter),\n      exporter: exporter\n    }));\n  }, [resource, displayedFilters, filterValues, selectedIds, filters, total] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n};\n\nListActions.propTypes = {\n  basePath: PropTypes.string,\n  className: PropTypes.string,\n  currentSort: PropTypes.object,\n  displayedFilters: PropTypes.object,\n  exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  filters: PropTypes.element,\n  filterValues: PropTypes.object,\n  hasCreate: PropTypes.bool,\n  resource: PropTypes.string,\n  onUnselectItems: PropTypes.func.isRequired,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  showFilter: PropTypes.func,\n  total: PropTypes.number\n};\nListActions.defaultProps = {\n  selectedIds: [],\n  onUnselectItems: function () {\n    return null;\n  }\n};\nexport default ListActions;","map":null,"metadata":{},"sourceType":"module"}