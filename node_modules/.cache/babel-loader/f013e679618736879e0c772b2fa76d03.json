{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { cloneElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useTranslate, warning } from 'ra-core';\n\nvar Title = function (_a) {\n  var className = _a.className,\n      defaultTitle = _a.defaultTitle,\n      locale = _a.locale,\n      record = _a.record,\n      title = _a.title,\n      rest = __rest(_a, [\"className\", \"defaultTitle\", \"locale\", \"record\", \"title\"]);\n\n  var translate = useTranslate();\n  var container = document.getElementById('react-admin-title');\n  if (!container) return null;\n  warning(!defaultTitle && !title, 'Missing title prop in <Title> element');\n  var titleElement = !title ? React.createElement(\"span\", __assign({\n    className: className\n  }, rest), defaultTitle) : typeof title === 'string' ? React.createElement(\"span\", __assign({\n    className: className\n  }, rest), translate(title, {\n    _: title\n  })) : cloneElement(title, __assign({\n    className: className,\n    record: record\n  }, rest));\n  return createPortal(titleElement, container);\n};\n\nexport var TitlePropType = PropTypes.oneOfType([PropTypes.string, PropTypes.element]);\nTitle.propTypes = {\n  defaultTitle: PropTypes.string,\n  className: PropTypes.string,\n  locale: PropTypes.string,\n  record: PropTypes.object,\n  title: TitlePropType\n};\nexport default Title;","map":null,"metadata":{},"sourceType":"module"}