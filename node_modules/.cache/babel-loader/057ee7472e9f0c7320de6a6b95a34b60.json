{"ast":null,"code":"import { isValidElement, cloneElement, useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for choices handling.\n *\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n */\n\nvar useChoices = function (_a) {\n  var _b = _a.optionText,\n      optionText = _b === void 0 ? 'name' : _b,\n      _c = _a.optionValue,\n      optionValue = _c === void 0 ? 'id' : _c,\n      _d = _a.translateChoice,\n      translateChoice = _d === void 0 ? true : _d;\n  var translate = useTranslate();\n  var getChoiceText = useCallback(function (choice) {\n    if (isValidElement(optionText)) {\n      return cloneElement(optionText, {\n        record: choice\n      });\n    }\n\n    var choiceName = typeof optionText === 'function' ? optionText(choice) : get(choice, optionText);\n    return translateChoice ? translate(choiceName, {\n      _: choiceName\n    }) : choiceName;\n  }, [optionText, translate, translateChoice]);\n  var getChoiceValue = useCallback(function (choice) {\n    return get(choice, optionValue);\n  }, [optionValue]);\n  return {\n    getChoiceText: getChoiceText,\n    getChoiceValue: getChoiceValue\n  };\n};\n\nexport default useChoices;","map":null,"metadata":{},"sourceType":"module"}