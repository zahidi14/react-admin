{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Card, Avatar, createMuiTheme, makeStyles } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { useHistory } from 'react-router-dom';\nimport { useCheckAuth } from 'ra-core';\nimport defaultTheme from '../defaultTheme';\nimport Notification from '../layout/Notification';\nimport DefaultLoginForm from './LoginForm';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    main: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh',\n      height: '1px',\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover'\n    },\n    card: {\n      minWidth: 300,\n      marginTop: '6em'\n    },\n    avatar: {\n      margin: '1em',\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    icon: {\n      backgroundColor: theme.palette.secondary[500]\n    }\n  };\n});\n/**\n * A standalone login page, to serve as authentication gate to the admin\n *\n * Expects the user to enter a login and a password, which will be checked\n * by the `authProvider.login()` method. Redirects to the root page (/)\n * upon success, otherwise displays an authentication error message.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to authenticate via email or facebook or anything else).\n *\n * @example\n *     import MyLoginPage from './MyLoginPage';\n *     const App = () => (\n *         <Admin loginPage={MyLoginPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\n\nvar Login = function (_a) {\n  var theme = _a.theme,\n      classesOverride = _a.classes,\n      className = _a.className,\n      children = _a.children,\n      staticContext = _a.staticContext,\n      backgroundImage = _a.backgroundImage,\n      rest = __rest(_a, [\"theme\", \"classes\", \"className\", \"children\", \"staticContext\", \"backgroundImage\"]);\n\n  var containerRef = useRef();\n  var classes = useStyles({\n    classes: classesOverride\n  });\n  var muiTheme = useMemo(function () {\n    return createMuiTheme(theme);\n  }, [theme]);\n  var backgroundImageLoaded = false;\n  var checkAuth = useCheckAuth();\n  var history = useHistory();\n  useEffect(function () {\n    checkAuth({}, false).then(function () {\n      // already authenticated, redirect to the home page\n      history.push('/');\n    }).catch(function () {// not authenticated, stay on the login page\n    });\n  }, [checkAuth, history]);\n\n  var updateBackgroundImage = function () {\n    if (!backgroundImageLoaded && containerRef.current) {\n      containerRef.current.style.backgroundImage = \"url(\" + backgroundImage + \")\";\n      backgroundImageLoaded = true;\n    }\n  }; // Load background image asynchronously to speed up time to interactive\n\n\n  var lazyLoadBackgroundImage = function () {\n    if (backgroundImage) {\n      var img = new Image();\n      img.onload = updateBackgroundImage;\n      img.src = backgroundImage;\n    }\n  };\n\n  useEffect(function () {\n    if (!backgroundImageLoaded) {\n      lazyLoadBackgroundImage();\n    }\n  });\n  return React.createElement(ThemeProvider, {\n    theme: muiTheme\n  }, React.createElement(\"div\", __assign({\n    className: classnames(classes.main, className)\n  }, rest, {\n    ref: containerRef\n  }), React.createElement(Card, {\n    className: classes.card\n  }, React.createElement(\"div\", {\n    className: classes.avatar\n  }, React.createElement(Avatar, {\n    className: classes.icon\n  }, React.createElement(LockIcon, null))), children), React.createElement(Notification, null)));\n};\n\nLogin.propTypes = {\n  backgroundImage: PropTypes.string,\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  theme: PropTypes.object,\n  staticContext: PropTypes.object\n};\nLogin.defaultProps = {\n  backgroundImage: 'https://source.unsplash.com/random/1600x900/daily',\n  theme: defaultTheme,\n  children: React.createElement(DefaultLoginForm, null)\n};\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}