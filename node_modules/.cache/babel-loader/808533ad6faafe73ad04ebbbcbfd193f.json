{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field, Form } from 'react-final-form';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTranslate, useLogin, useNotify, useSafeSetState } from 'ra-core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      padding: '0 1em 1em 1em'\n    },\n    input: {\n      marginTop: '1em'\n    },\n    button: {\n      width: '100%'\n    },\n    icon: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\n\nvar Input = function (_a) {\n  var _b = _a.meta,\n      touched = _b.touched,\n      error = _b.error,\n      // eslint-disable-line react/prop-types\n  inputProps = _a.input,\n      // eslint-disable-line react/prop-types\n  props = __rest(_a, [\"meta\", \"input\"]);\n\n  return React.createElement(TextField, __assign({\n    error: !!(touched && error),\n    helperText: touched && error\n  }, inputProps, props, {\n    fullWidth: true\n  }));\n};\n\nvar LoginForm = function (_a) {\n  var redirectTo = _a.redirectTo;\n\n  var _b = useSafeSetState(false),\n      loading = _b[0],\n      setLoading = _b[1];\n\n  var login = useLogin();\n  var translate = useTranslate();\n  var notify = useNotify();\n  var classes = useStyles({});\n\n  var validate = function (values) {\n    var errors = {\n      username: undefined,\n      password: undefined\n    };\n\n    if (!values.username) {\n      errors.username = translate('ra.validation.required');\n    }\n\n    if (!values.password) {\n      errors.password = translate('ra.validation.required');\n    }\n\n    return errors;\n  };\n\n  var submit = function (values) {\n    setLoading(true);\n    login(values, redirectTo).then(function () {\n      setLoading(false);\n    }).catch(function (error) {\n      setLoading(false);\n      notify(typeof error === 'string' ? error : typeof error === 'undefined' || !error.message ? 'ra.auth.sign_in_error' : error.message, 'warning');\n    });\n  };\n\n  return React.createElement(Form, {\n    onSubmit: submit,\n    validate: validate,\n    render: function (_a) {\n      var handleSubmit = _a.handleSubmit;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        noValidate: true\n      }, React.createElement(\"div\", {\n        className: classes.form\n      }, React.createElement(\"div\", {\n        className: classes.input\n      }, React.createElement(Field, {\n        autoFocus: true,\n        id: \"username\",\n        name: \"username\",\n        component: Input,\n        label: translate('ra.auth.username'),\n        disabled: loading\n      })), React.createElement(\"div\", {\n        className: classes.input\n      }, React.createElement(Field, {\n        id: \"password\",\n        name: \"password\",\n        component: Input,\n        label: translate('ra.auth.password'),\n        type: \"password\",\n        disabled: loading,\n        autoComplete: \"current-password\"\n      }))), React.createElement(CardActions, null, React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"primary\",\n        disabled: loading,\n        className: classes.button\n      }, loading && React.createElement(CircularProgress, {\n        className: classes.icon,\n        size: 18,\n        thickness: 2\n      }), translate('ra.auth.sign_in'))));\n    }\n  });\n};\n\nLoginForm.propTypes = {\n  redirectTo: PropTypes.string\n};\nexport default LoginForm;","map":null,"metadata":{},"sourceType":"module"}