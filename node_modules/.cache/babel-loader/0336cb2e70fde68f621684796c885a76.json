{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport onlyUpdateForKeys from 'recompose/onlyUpdateForKeys';\nimport { Fab, makeStyles, useMediaQuery } from '@material-ui/core';\nimport ContentAdd from '@material-ui/icons/Add';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'ra-core';\nimport Button from './Button';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    floating: {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 60,\n      left: 'auto',\n      position: 'fixed',\n      zIndex: 1000\n    },\n    floatingLink: {\n      color: 'inherit'\n    }\n  };\n});\n\nvar CreateButton = function (_a) {\n  var _b = _a.basePath,\n      basePath = _b === void 0 ? '' : _b,\n      className = _a.className,\n      classesOverride = _a.classes,\n      _c = _a.label,\n      label = _c === void 0 ? 'ra.action.create' : _c,\n      _d = _a.icon,\n      icon = _d === void 0 ? React.createElement(ContentAdd, null) : _d,\n      rest = __rest(_a, [\"basePath\", \"className\", \"classes\", \"label\", \"icon\"]);\n\n  var classes = useStyles({\n    classes: classesOverride\n  });\n  var translate = useTranslate();\n  var isSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  return isSmall ? React.createElement(Fab, __assign({\n    component: Link,\n    color: \"primary\",\n    className: classnames(classes.floating, className),\n    to: basePath + \"/create\",\n    \"aria-label\": label && translate(label)\n  }, rest), icon) : React.createElement(Button, __assign({\n    component: Link,\n    to: basePath + \"/create\",\n    className: className,\n    label: label\n  }, rest), icon);\n};\n\nCreateButton.propTypes = {\n  basePath: PropTypes.string,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  label: PropTypes.string,\n  size: PropTypes.string,\n  icon: PropTypes.element\n};\nvar enhance = onlyUpdateForKeys(['basePath', 'label', 'translate']);\nexport default enhance(CreateButton);","map":null,"metadata":{},"sourceType":"module"}