{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nexport var getTabFullPath = function (tab, index, baseUrl) {\n  return \"\" + baseUrl + (tab.props.path ? \"/\" + tab.props.path : index > 0 ? \"/\" + index : '');\n};\n\nvar TabbedShowLayoutTabs = function (_a) {\n  var children = _a.children,\n      rest = __rest(_a, [\"children\"]);\n\n  var location = useLocation();\n  var match = useRouteMatch(); // The location pathname will contain the page path including the current tab path\n  // so we can use it as a way to determine the current tab\n\n  var value = location.pathname;\n  return React.createElement(Tabs, __assign({\n    indicatorColor: \"primary\",\n    value: value\n  }, rest), Children.map(children, function (tab, index) {\n    if (!tab || !isValidElement(tab)) return null; // Builds the full tab tab which is the concatenation of the last matched route in the\n    // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n    // and the tab path.\n    // This will be used as the Tab's value\n\n    var tabPath = getTabFullPath(tab, index, match.url);\n    return cloneElement(tab, {\n      context: 'header',\n      value: tabPath\n    });\n  }));\n};\n\nTabbedShowLayoutTabs.propTypes = {\n  children: PropTypes.node\n};\nexport default TabbedShowLayoutTabs;","map":null,"metadata":{},"sourceType":"module"}