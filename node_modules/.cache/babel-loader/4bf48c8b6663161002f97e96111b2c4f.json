{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport admin, { getResources as adminGetResources, getReferenceResource as adminGetReferenceResource, getPossibleReferenceValues as adminGetPossibleReferenceValues } from './admin';\nexport { getNotification } from './admin/notifications';\nexport default (function (customReducers, history) {\n  return combineReducers(__assign({\n    admin: admin,\n    router: connectRouter(history)\n  }, customReducers));\n});\nexport var getPossibleReferenceValues = function (state, props) {\n  return adminGetPossibleReferenceValues(state.admin, props);\n};\nexport var getResources = function (state) {\n  return adminGetResources(state.admin);\n};\nexport var getReferenceResource = function (state, props) {\n  return adminGetReferenceResource(state.admin, props);\n};\nexport { getPossibleReferences } from './admin';","map":null,"metadata":{},"sourceType":"module"}