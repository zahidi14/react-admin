{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Report';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport History from '@material-ui/icons/History';\nimport Title, { TitlePropType } from './Title';\nimport { useTranslate } from 'ra-core';\nvar useStyles = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    container: (_a = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, _a[theme.breakpoints.down('sm')] = {\n      padding: '1em'\n    }, _a.fontFamily = 'Roboto, sans-serif', _a.opacity = 0.5, _a),\n    title: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    icon: {\n      width: '2em',\n      height: '2em',\n      marginRight: '0.5em'\n    },\n    panel: {\n      marginTop: '1em'\n    },\n    panelDetails: {\n      whiteSpace: 'pre-wrap'\n    },\n    toolbar: {\n      marginTop: '2em'\n    }\n  };\n});\n\nfunction goBack() {\n  window.history.go(-1);\n}\n\nvar Error = function (_a) {\n  var error = _a.error,\n      errorInfo = _a.errorInfo,\n      classesOverride = _a.classes,\n      className = _a.className,\n      title = _a.title,\n      rest = __rest(_a, [\"error\", \"errorInfo\", \"classes\", \"className\", \"title\"]);\n\n  var classes = useStyles({\n    classes: classesOverride\n  });\n  var translate = useTranslate();\n  return React.createElement(Fragment, null, React.createElement(Title, {\n    defaultTitle: title\n  }), React.createElement(\"div\", __assign({\n    className: classnames(classes.container, className)\n  }, rest), React.createElement(\"h1\", {\n    className: classes.title,\n    role: \"alert\"\n  }, React.createElement(ErrorIcon, {\n    className: classes.icon\n  }), translate('ra.page.error')), React.createElement(\"div\", null, translate('ra.message.error')), process.env.NODE_ENV !== 'production' && React.createElement(ExpansionPanel, {\n    className: classes.panel\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, null)\n  }, translate('ra.message.details')), React.createElement(ExpansionPanelDetails, {\n    className: classes.panelDetails\n  }, React.createElement(\"div\", null, React.createElement(\"h2\", null, translate(error.toString())), errorInfo.componentStack))), React.createElement(\"div\", {\n    className: classes.toolbar\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    icon: React.createElement(History, null),\n    onClick: goBack\n  }, translate('ra.action.back')))));\n};\n\nError.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  error: PropTypes.object.isRequired,\n  errorInfo: PropTypes.object,\n  title: TitlePropType\n};\nexport default Error;","map":null,"metadata":{},"sourceType":"module"}