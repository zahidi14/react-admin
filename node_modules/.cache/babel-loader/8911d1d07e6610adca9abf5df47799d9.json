{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef, cloneElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nvar NavLinkRef = React.forwardRef(function (props, ref) {\n  return React.createElement(NavLink, __assign({\n    innerRef: ref\n  }, props));\n});\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      color: theme.palette.text.secondary\n    },\n    active: {\n      color: theme.palette.text.primary\n    },\n    icon: {\n      minWidth: theme.spacing(5)\n    }\n  };\n});\nvar MenuItemLink = forwardRef(function (_a, ref) {\n  var classesOverride = _a.classes,\n      className = _a.className,\n      primaryText = _a.primaryText,\n      leftIcon = _a.leftIcon,\n      onClick = _a.onClick,\n      sidebarIsOpen = _a.sidebarIsOpen,\n      props = __rest(_a, [\"classes\", \"className\", \"primaryText\", \"leftIcon\", \"onClick\", \"sidebarIsOpen\"]);\n\n  var classes = useStyles({\n    classes: classesOverride\n  });\n  var handleMenuTap = useCallback(function (e) {\n    onClick && onClick(e);\n  }, [onClick]);\n\n  var renderMenuItem = function () {\n    return React.createElement(MenuItem, __assign({\n      className: classnames(classes.root, className),\n      activeClassName: classes.active,\n      component: NavLinkRef,\n      ref: ref\n    }, props, {\n      onClick: handleMenuTap\n    }), leftIcon && React.createElement(ListItemIcon, {\n      className: classes.icon\n    }, cloneElement(leftIcon, {\n      titleAccess: primaryText\n    })), primaryText);\n  };\n\n  if (sidebarIsOpen) {\n    return renderMenuItem();\n  }\n\n  return React.createElement(Tooltip, {\n    title: primaryText,\n    placement: \"right\"\n  }, renderMenuItem());\n});\nMenuItemLink.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  leftIcon: PropTypes.element,\n  onClick: PropTypes.func,\n  primaryText: PropTypes.node,\n  staticContext: PropTypes.object,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nexport default MenuItemLink;","map":null,"metadata":{},"sourceType":"module"}