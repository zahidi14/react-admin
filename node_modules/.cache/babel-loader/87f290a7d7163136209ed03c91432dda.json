{"ast":null,"code":"var __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { all, put, call, select, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { push, replace } from 'connected-react-router';\nimport { showNotification, hideNotification } from '../actions/notificationActions';\nimport { USER_LOGIN, USER_LOGIN_LOADING, USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_CHECK, USER_LOGOUT } from '../actions/authActions';\nimport { FETCH_ERROR } from '../actions/fetchActions';\nimport { clearState } from '../actions/clearActions';\nexport default (function (authProvider) {\n  if (!authProvider) {\n    return function () {\n      return null;\n    };\n  }\n\n  return function watchAuthActions() {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , all([takeEvery(USER_LOGIN, handleLogin(authProvider)), takeEvery(USER_CHECK, handleCheck(authProvider)), takeEvery(USER_LOGOUT, handleLogout(authProvider)), takeLatest(FETCH_ERROR, handleFetchError(authProvider))])];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n});\n\nvar nextPathnameSelector = function (state) {\n  var locationState = state.router.location.state;\n  return locationState && locationState.nextPathname;\n};\n\nvar currentPathnameSelector = function (state) {\n  return state.router.location;\n};\n\nvar getErrorMessage = function (error, defaultMessage) {\n  return typeof error === 'string' ? error : typeof error === 'undefined' || !error.message ? defaultMessage : error.message;\n};\n\nexport var handleLogin = function (authProvider) {\n  return function (action) {\n    var payload, meta, authPayload, redirectTo, e_1, errorMessage;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          payload = action.payload, meta = action.meta;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 7,, 10]);\n\n          return [4\n          /*yield*/\n          , put({\n            type: USER_LOGIN_LOADING\n          })];\n\n        case 2:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , call([authProvider, 'login'], payload)];\n\n        case 3:\n          authPayload = _a.sent();\n          return [4\n          /*yield*/\n          , put({\n            type: USER_LOGIN_SUCCESS,\n            payload: authPayload\n          })];\n\n        case 4:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , meta.pathName || select(nextPathnameSelector)];\n\n        case 5:\n          redirectTo = _a.sent();\n          return [4\n          /*yield*/\n          , put(push(redirectTo || '/'))];\n\n        case 6:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 7:\n          e_1 = _a.sent();\n          return [4\n          /*yield*/\n          , put({\n            type: USER_LOGIN_FAILURE,\n            error: e_1,\n            meta: {\n              auth: true\n            }\n          })];\n\n        case 8:\n          _a.sent();\n\n          errorMessage = getErrorMessage(e_1, 'ra.auth.sign_in_error');\n          return [4\n          /*yield*/\n          , put(showNotification(errorMessage, 'warning'))];\n\n        case 9:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 10:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n};\nexport var handleCheck = function (authProvider) {\n  return function (action) {\n    var payload, meta, error_1, redirectTo, errorMessage;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          payload = action.payload, meta = action.meta;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 8]);\n\n          return [4\n          /*yield*/\n          , call([authProvider, 'checkAuth'], payload)];\n\n        case 2:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 3:\n          error_1 = _a.sent();\n          return [4\n          /*yield*/\n          , call([authProvider, 'logout'], undefined)];\n\n        case 4:\n          redirectTo = _a.sent();\n          return [4\n          /*yield*/\n          , put(replace({\n            pathname: error_1 && error_1.redirectTo || redirectTo || '/login',\n            state: {\n              nextPathname: meta.pathName\n            }\n          }))];\n\n        case 5:\n          _a.sent(); // Clear the state before showing a notification as it would be dismissed immediately otherwise\n\n\n          return [4\n          /*yield*/\n          , put(clearState())];\n\n        case 6:\n          // Clear the state before showing a notification as it would be dismissed immediately otherwise\n          _a.sent();\n\n          errorMessage = getErrorMessage(error_1, 'ra.auth.auth_check_error');\n          return [4\n          /*yield*/\n          , put(showNotification(errorMessage, 'warning'))];\n\n        case 7:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 8:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n};\nexport var handleLogout = function (authProvider) {\n  return function (action) {\n    var payload, redirectTo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          payload = action.payload;\n          return [4\n          /*yield*/\n          , call([authProvider, 'logout'], undefined)];\n\n        case 1:\n          redirectTo = _a.sent();\n          return [4\n          /*yield*/\n          , put(push(payload && payload.redirectTo || redirectTo || '/login'))];\n\n        case 2:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , put(clearState())];\n\n        case 3:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n};\nexport var handleFetchError = function (authProvider) {\n  return function (action) {\n    var error, e_2, nextPathname, redirectTo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          error = action.error;\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 10]);\n\n          return [4\n          /*yield*/\n          , call([authProvider, 'checkError'], error)];\n\n        case 2:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 3:\n          e_2 = _a.sent();\n          return [4\n          /*yield*/\n          , select(currentPathnameSelector)];\n\n        case 4:\n          nextPathname = _a.sent();\n          return [4\n          /*yield*/\n          , call([authProvider, 'logout'], undefined)];\n\n        case 5:\n          redirectTo = _a.sent();\n          return [4\n          /*yield*/\n          , put(push({\n            pathname: redirectTo || '/login',\n            state: {\n              nextPathname: nextPathname\n            }\n          }))];\n\n        case 6:\n          _a.sent(); // Clear the state before showing a notification as it would be dismissed immediately otherwise\n\n\n          return [4\n          /*yield*/\n          , put(clearState())];\n\n        case 7:\n          // Clear the state before showing a notification as it would be dismissed immediately otherwise\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , put(hideNotification())];\n\n        case 8:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , put(showNotification('ra.notification.logged_out', 'warning'))];\n\n        case 9:\n          _a.sent();\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 10:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}