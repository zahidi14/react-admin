{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nvar useStyles = makeStyles(function (theme) {\n  var _a, _b;\n\n  return {\n    toolbar: (_a = {\n      justifyContent: 'space-between',\n      alignItems: 'flex-start',\n      paddingRight: 0\n    }, _a[theme.breakpoints.up('xs')] = {\n      paddingLeft: 0\n    }, _a[theme.breakpoints.down('xs')] = {\n      paddingLeft: theme.spacing(2),\n      backgroundColor: theme.palette.background.paper\n    }, _a),\n    actions: (_b = {\n      paddingTop: theme.spacing(3),\n      minHeight: theme.spacing(5)\n    }, _b[theme.breakpoints.down('xs')] = {\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.paper\n    }, _b)\n  };\n});\nvar defaultClasses = {}; // avoid needless updates\n\nvar ListToolbar = function (_a) {\n  var _b = _a.classes,\n      classes = _b === void 0 ? defaultClasses : _b,\n      filters = _a.filters,\n      filterValues = _a.filterValues,\n      // dynamically set via the UI by the user\n  permanentFilter = _a.permanentFilter,\n      // set in the List component by the developer\n  actions = _a.actions,\n      exporter = _a.exporter,\n      rest = __rest(_a, [\"classes\", \"filters\", \"filterValues\", \"permanentFilter\", \"actions\", \"exporter\"]);\n\n  var styles = useStyles({\n    classes: classes\n  });\n  return React.createElement(Toolbar, {\n    className: styles.toolbar\n  }, filters && React.cloneElement(filters, __assign({}, rest, {\n    filterValues: filterValues,\n    context: 'form'\n  })), React.createElement(\"span\", null), actions && React.cloneElement(actions, __assign({}, rest, {\n    className: styles.actions,\n    exporter: exporter,\n    filters: filters,\n    filterValues: filterValues,\n    permanentFilter: permanentFilter\n  }, actions.props)));\n};\n\nListToolbar.propTypes = {\n  classes: PropTypes.object,\n  filters: PropTypes.element,\n  permanentFilter: PropTypes.object,\n  actions: PropTypes.element,\n  exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool])\n};\nexport default React.memo(ListToolbar);","map":null,"metadata":{},"sourceType":"module"}