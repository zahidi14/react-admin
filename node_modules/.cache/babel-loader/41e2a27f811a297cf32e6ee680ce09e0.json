{"ast":null,"code":"import { useCallback } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { setListSelectedIds, toggleListItem } from '../actions/listActions';\n/**\n * Get the list of selected items for a resource, and callbacks to change the selection\n *\n * @param resource The resource name, e.g. 'posts'\n *\n * @returns {Object} Destructure as [selectedIds, { select, toggle, clearSelection }].\n */\n\nvar useSelectItems = function (resource) {\n  var dispatch = useDispatch();\n  var selectedIds = useSelector(function (reduxState) {\n    return reduxState.admin.resources[resource].list.selectedIds;\n  }, shallowEqual);\n  var selectionModifiers = {\n    select: useCallback(function (newIds) {\n      dispatch(setListSelectedIds(resource, newIds));\n    }, [resource] // eslint-disable-line react-hooks/exhaustive-deps\n    ),\n    toggle: useCallback(function (id) {\n      dispatch(toggleListItem(resource, id));\n    }, [resource] // eslint-disable-line react-hooks/exhaustive-deps\n    ),\n    clearSelection: useCallback(function () {\n      dispatch(setListSelectedIds(resource, []));\n    }, [resource])\n  };\n  return [selectedIds, selectionModifiers];\n};\n\nexport default useSelectItems;","map":null,"metadata":{},"sourceType":"module"}