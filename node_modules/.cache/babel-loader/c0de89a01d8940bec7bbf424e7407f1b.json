{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigationRefresh from '@material-ui/icons/Refresh';\nimport { refreshView, useTranslate } from 'ra-core';\nvar defaultIcon = React.createElement(NavigationRefresh, null);\n\nvar RefreshIconButton = function (_a) {\n  var _b = _a.label,\n      label = _b === void 0 ? 'ra.action.refresh' : _b,\n      _c = _a.icon,\n      icon = _c === void 0 ? defaultIcon : _c,\n      onClick = _a.onClick,\n      className = _a.className,\n      rest = __rest(_a, [\"label\", \"icon\", \"onClick\", \"className\"]);\n\n  var dispatch = useDispatch();\n  var translate = useTranslate();\n  var handleClick = useCallback(function (event) {\n    event.preventDefault();\n    dispatch(refreshView());\n\n    if (typeof onClick === 'function') {\n      onClick();\n    }\n  }, [dispatch, onClick]);\n  return React.createElement(Tooltip, {\n    title: label && translate(label, {\n      _: label\n    })\n  }, React.createElement(IconButton, __assign({\n    \"aria-label\": label && translate(label, {\n      _: label\n    }),\n    className: className,\n    color: \"inherit\",\n    onClick: handleClick\n  }, rest), icon));\n};\n\nRefreshIconButton.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.element\n};\nexport default RefreshIconButton;","map":null,"metadata":{},"sourceType":"module"}