{"ast":null,"code":"import { useNotify, useRedirect, useRefresh, useUnselectAll } from '../sideEffect';\nimport { useMemo } from 'react';\n\nvar useDeclarativeSideEffects = function () {\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var refresh = useRefresh();\n  var unselectAll = useUnselectAll();\n  return useMemo(function () {\n    return function (resource, _a) {\n      var _b = _a === void 0 ? {\n        onSuccess: undefined,\n        onFailure: undefined\n      } : _a,\n          onSuccess = _b.onSuccess,\n          onFailure = _b.onFailure;\n\n      var convertToFunctionSideEffect = function (resource, sideEffects) {\n        if (!sideEffects || typeof sideEffects === 'function') {\n          return sideEffects;\n        }\n\n        if (Object.keys(sideEffects).length === 0) {\n          return undefined;\n        }\n\n        var notification = sideEffects.notification,\n            redirectTo = sideEffects.redirectTo,\n            needRefresh = sideEffects.refresh,\n            needUnselectAll = sideEffects.unselectAll;\n        return function () {\n          if (notification) {\n            notify(notification.body, notification.level, notification.messageArgs);\n          }\n\n          if (redirectTo) {\n            redirect(redirectTo);\n          }\n\n          if (needRefresh) {\n            refresh();\n          }\n\n          if (needUnselectAll) {\n            unselectAll(resource);\n          }\n        };\n      };\n\n      return {\n        onSuccess: convertToFunctionSideEffect(resource, onSuccess),\n        onFailure: convertToFunctionSideEffect(resource, onFailure)\n      };\n    };\n  }, [notify, redirect, refresh, unselectAll]);\n};\n\nexport default useDeclarativeSideEffects;","map":null,"metadata":{},"sourceType":"module"}