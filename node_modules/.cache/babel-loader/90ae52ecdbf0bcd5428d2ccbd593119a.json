{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport { useTranslate } from 'ra-core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    actions: {\n      flexShrink: 0,\n      color: theme.palette.text.secondary,\n      marginLeft: 20\n    },\n    hellip: {\n      padding: '1.2em'\n    }\n  };\n});\n\nfunction PaginationActions(_a) {\n  var classesOverride = _a.classes,\n      page = _a.page,\n      rowsPerPage = _a.rowsPerPage,\n      count = _a.count,\n      onChangePage = _a.onChangePage;\n  var classes = useStyles({\n    classes: classesOverride\n  });\n  var translate = useTranslate();\n  /**\n   * Warning: material-ui's page is 0-based\n   */\n\n  var range = function () {\n    var nbPages = Math.ceil(count / rowsPerPage) || 1;\n\n    if (isNaN(page) || nbPages === 1) {\n      return [];\n    }\n\n    var input = []; // display page links around the current page\n\n    if (page > 1) {\n      input.push(1);\n    }\n\n    if (page === 3) {\n      input.push(2);\n    }\n\n    if (page > 3) {\n      input.push('.');\n    }\n\n    if (page > 0) {\n      input.push(page);\n    }\n\n    input.push(page + 1);\n\n    if (page < nbPages - 1) {\n      input.push(page + 2);\n    }\n\n    if (page === nbPages - 4) {\n      input.push(nbPages - 1);\n    }\n\n    if (page < nbPages - 4) {\n      input.push('.');\n    }\n\n    if (page < nbPages - 2) {\n      input.push(nbPages);\n    }\n\n    return input;\n  };\n\n  var getNbPages = function () {\n    return Math.ceil(count / rowsPerPage) || 1;\n  };\n\n  var prevPage = function (event) {\n    if (page === 0) {\n      throw new Error(translate('ra.navigation.page_out_from_begin'));\n    }\n\n    onChangePage(event, page - 1);\n  };\n\n  var nextPage = function (event) {\n    if (page > getNbPages() - 1) {\n      throw new Error(translate('ra.navigation.page_out_from_end'));\n    }\n\n    onChangePage(event, page + 1);\n  };\n\n  var gotoPage = function (event) {\n    var page = parseInt(event.currentTarget.dataset.page, 10);\n\n    if (page < 0 || page > getNbPages() - 1) {\n      throw new Error(translate('ra.navigation.page_out_of_boundaries', {\n        page: page + 1\n      }));\n    }\n\n    onChangePage(event, page);\n  };\n\n  var renderPageNums = function () {\n    return range().map(function (pageNum, index) {\n      return pageNum === '.' ? React.createElement(\"span\", {\n        key: \"hyphen_\" + index,\n        className: classes.hellip\n      }, \"\\u2026\") : React.createElement(Button, {\n        className: \"page-number\",\n        color: pageNum === page + 1 ? 'default' : 'primary',\n        key: pageNum,\n        \"data-page\": pageNum - 1,\n        onClick: gotoPage,\n        size: \"small\"\n      }, pageNum);\n    });\n  };\n\n  var nbPages = getNbPages();\n  if (nbPages === 1) return React.createElement(\"div\", {\n    className: classes.actions\n  });\n  return React.createElement(\"div\", {\n    className: classes.actions\n  }, page > 0 && React.createElement(Button, {\n    color: \"primary\",\n    key: \"prev\",\n    onClick: prevPage,\n    className: \"previous-page\",\n    size: \"small\"\n  }, React.createElement(ChevronLeft, null), translate('ra.navigation.prev')), renderPageNums(), page !== nbPages - 1 && React.createElement(Button, {\n    color: \"primary\",\n    key: \"next\",\n    onClick: nextPage,\n    className: \"next-page\",\n    size: \"small\"\n  }, translate('ra.navigation.next'), React.createElement(ChevronRight, null)));\n}\n/**\n * PaginationActions propTypes are copied over from material-uiâ€™s\n * TablePaginationActions propTypes. See\n * https://github.com/mui-org/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\n * for reference.\n */\n\n\nPaginationActions.propTypes = {\n  backIconButtonProps: PropTypes.object,\n  count: PropTypes.number.isRequired,\n  classes: PropTypes.object,\n  nextIconButtonProps: PropTypes.object,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nexport default React.memo(PaginationActions);","map":null,"metadata":{},"sourceType":"module"}