{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchStart, fetchEnd } from '../actions/fetchActions';\n/**\n * Update the loading count, which starts or stops the loading indicator.\n *\n * To be used to show the loading indicator when you don't use the dataProvider.\n *\n * @return {Object} startLoading and stopLoading callbacks\n *\n * @example\n * import { useUpdateLoading } from 'react-admin'\n *\n * const MyComponent = () => {\n *      const { startLoading, stopLoading } = useUpdateLoading();\n *      useEffect(() => {\n *          startLoading();\n *          fetch('http://my.domain.api/foo')\n *              .finally(() => stopLoading());\n *      }, []);\n *      return <span>Foo</span>;\n * }\n */\n\nexport default (function () {\n  var dispatch = useDispatch();\n  var startLoading = useCallback(function () {\n    dispatch(fetchStart());\n  }, [dispatch]);\n  var stopLoading = useCallback(function () {\n    dispatch(fetchEnd());\n  }, [dispatch]);\n  return {\n    startLoading: startLoading,\n    stopLoading: stopLoading\n  };\n});","map":null,"metadata":{},"sourceType":"module"}