{"ast":null,"code":"import { useGetMany } from '../dataProvider';\n/**\n * @typedef ReferenceProps\n * @type {Object}\n * @property {boolean} loading: boolean indicating if the reference is loading\n * @property {boolean} loaded: boolean indicating if the reference has loaded\n * @property {Object} referenceRecord: the referenced record.\n */\n\n/**\n * Fetch reference record, and return it when available\n *\n * The reference prop sould be the name of one of the <Resource> components\n * added as <Admin> child.\n *\n * @example\n *\n * const { loading, loaded, referenceRecord } = useReference({\n *     id: 7,\n *     reference: 'users',\n * });\n *\n * @param {Object} option\n * @param {string} option.reference The linked resource name\n * @param {string} option.id The id of the reference\n *\n * @returns {ReferenceProps} The reference record\n */\n\nexport var useReference = function (_a) {\n  var reference = _a.reference,\n      id = _a.id;\n\n  var _b = useGetMany(reference, [id]),\n      data = _b.data,\n      error = _b.error,\n      loading = _b.loading,\n      loaded = _b.loaded;\n\n  return {\n    referenceRecord: error ? undefined : data[0],\n    error: error,\n    loading: loading,\n    loaded: loaded\n  };\n};\nexport default useReference;","map":null,"metadata":{},"sourceType":"module"}