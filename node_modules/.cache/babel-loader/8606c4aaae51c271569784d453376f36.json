{"ast":null,"code":"import { useCallback } from 'react';\nimport useAuthProvider from './useAuthProvider';\nimport useLogout from './useLogout';\nimport { useNotify } from '../sideEffect';\n/**\n * Returns a callback used to call the authProvider.checkError() method\n * and an error from the dataProvider. If the authProvider rejects the call,\n * the hook logs the user out and shows a logged out notification.\n *\n * Used in the useDataProvider hook to check for access denied responses\n * (e.g. 401 or 403 responses) and trigger a logout.\n *\n * @see useLogout\n * @see useDataProvider\n *\n * @returns {Function} logoutIfAccessDenied callback\n *\n * @example\n *\n * import { useLogoutIfAccessDenied, useNotify, DataProviderContext } from 'react-admin';\n *\n * const FetchRestrictedResource = () => {\n *     const dataProvider = useContext(DataProviderContext);\n *     const logoutIfAccessDenied = useLogoutIfAccessDenied();\n *     const notify = useNotify()\n *     useEffect(() => {\n *         dataProvider.getOne('secret', { id: 123 })\n *             .catch(error => {\n *                  logoutIfaccessDenied(error);\n *                  notify('server error', 'warning');\n *              })\n *     }, []);\n *     // ...\n * }\n */\n\nvar useLogoutIfAccessDenied = function () {\n  var authProvider = useAuthProvider();\n  var logout = useLogout();\n  var notify = useNotify();\n  var logoutIfAccessDenied = useCallback(function (error) {\n    return authProvider.checkError(error).then(function () {\n      return false;\n    }).catch(function (e) {\n      var redirectTo = e && e.redirectTo ? e.redirectTo : error && error.redirectTo ? error.redirectto : undefined;\n      logout({}, redirectTo);\n      notify('ra.notification.logged_out', 'warning');\n      return true;\n    });\n  }, [authProvider, logout, notify]);\n  return authProvider ? logoutIfAccessDenied : logoutIfAccessDeniedWithoutProvider;\n};\n\nvar logoutIfAccessDeniedWithoutProvider = function () {\n  return Promise.resolve(false);\n};\n\nexport default useLogoutIfAccessDenied;","map":null,"metadata":{},"sourceType":"module"}