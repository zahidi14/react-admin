{"ast":null,"code":"import React from 'react';\nimport AdminContext from './AdminContext';\nimport AdminUI from './AdminUI';\n/**\n * Main admin component, entry point to the application.\n *\n * Initializes the various contexts (auth, data, i18n, redux, router)\n * and defines the main routes.\n *\n * Expects a list of resources as children, or a function returning a list of\n * resources based on the permissions.\n *\n * @example\n *\n * // static list of resources\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         <Resource name=\"posts\" list={ListGuesser} />\n *     </Admin>\n * );\n *\n * // dynamic list of resources based on permissions\n *\n * import {\n *     Admin,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <Admin dataProvider={myDataProvider}>\n *         {permissions => [\n *             <Resource name=\"posts\" key=\"posts\" list={ListGuesser} />,\n *         ]}\n *     </Admin>\n * );\n *\n * // If you have to build a dynamic list of resources using a side effect,\n * // you can't use <Admin>. But as it delegates to sub components,\n * // it's relatively straightforward to replace it:\n *\n * import React, { useEffect, useState } from 'react';\n * import {\n *     AdminContext,\n *     AdminUI,\n *     Resource,\n *     ListGuesser,\n *     useDataProvider,\n * } from 'react-admin';\n *\n * const App = () => (\n *     <AdminContext dataProvider={myDataProvider}>\n *         <Resources />\n *     </AdminContext>\n * );\n *\n * const Resources = () => {\n *     const [resources, setResources] = useState([]);\n *     const dataProvider = useDataProvider();\n *     useEffect(() => {\n *         dataProvider.introspect().then(r => setResources(r));\n *     }, []);\n *\n *     return (\n *         <AdminUI>\n *             {resources.map(resource => (\n *                 <Resource name={resource.name} key={resource.key} list={ListGuesser} />\n *             ))}\n *         </AdminUI>\n *     );\n * };\n */\n\nvar Admin = function (_a) {\n  var appLayout = _a.appLayout,\n      authProvider = _a.authProvider,\n      catchAll = _a.catchAll,\n      children = _a.children,\n      customReducers = _a.customReducers,\n      _b = _a.customRoutes,\n      customRoutes = _b === void 0 ? [] : _b,\n      customSagas = _a.customSagas,\n      dashboard = _a.dashboard,\n      dataProvider = _a.dataProvider,\n      history = _a.history,\n      i18nProvider = _a.i18nProvider,\n      initialState = _a.initialState,\n      layout = _a.layout,\n      loading = _a.loading,\n      locale = _a.locale,\n      loginPage = _a.loginPage,\n      logoutButton = _a.logoutButton,\n      menu = _a.menu,\n      // deprecated, use a custom layout instead\n  theme = _a.theme,\n      _c = _a.title,\n      title = _c === void 0 ? 'React Admin' : _c;\n\n  if (appLayout) {\n    console.warn('You are using deprecated prop \"appLayout\", it was replaced by \"layout\", see https://github.com/marmelab/react-admin/issues/2918');\n  }\n\n  if (loginPage === true && process.env.NODE_ENV !== 'production') {\n    console.warn('You passed true to the loginPage prop. You must either pass false to disable it or a component class to customize it');\n  }\n\n  if (locale) {\n    console.warn('You are using deprecated prop \"locale\". You must now pass the initial locale to your i18nProvider');\n  }\n\n  return React.createElement(AdminContext, {\n    authProvider: authProvider,\n    dataProvider: dataProvider,\n    i18nProvider: i18nProvider,\n    history: history,\n    customReducers: customReducers,\n    customSagas: customSagas,\n    initialState: initialState\n  }, React.createElement(AdminUI, {\n    layout: appLayout || layout,\n    customRoutes: customRoutes,\n    dashboard: dashboard,\n    menu: menu,\n    catchAll: catchAll,\n    theme: theme,\n    title: title,\n    loading: loading,\n    loginPage: loginPage,\n    logout: authProvider ? logoutButton : undefined\n  }, children));\n};\n\nexport default Admin;","map":null,"metadata":{},"sourceType":"module"}