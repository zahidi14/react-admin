{"ast":null,"code":"import { useContext, useCallback } from 'react';\nimport { TranslationContext } from './TranslationContext';\n/**\n * Translate a string using the current locale and the translations from the i18nProvider\n *\n * @see Polyglot.t()\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\n *\n * @return {Function} A translation function, accepting two arguments\n *   - a string used as key in the translations\n *   - an interpolationOptions object\n *\n * @example\n *\n * import { useTranslate } from 'react-admin';\n *\n * const SettingsMenu = () => {\n *     const translate = useTranslate();\n *     return <MenuItem>{translate('settings')}</MenuItem>;\n * }\n */\n\nvar useTranslate = function () {\n  var _a = useContext(TranslationContext),\n      i18nProvider = _a.i18nProvider,\n      locale = _a.locale;\n\n  var translate = useCallback(function (key, options) {\n    return i18nProvider.translate(key, options);\n  }, // update the hook each time the locale changes\n  [i18nProvider, locale] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return i18nProvider ? translate : identity;\n};\n\nvar identity = function (key) {\n  return key;\n};\n\nexport default useTranslate;","map":null,"metadata":{},"sourceType":"module"}