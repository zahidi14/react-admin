{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'react-final-form';\nimport { composeValidators } from './validate';\nexport var isRequired = function (validate) {\n  if (validate && validate.isRequired) {\n    return true;\n  }\n\n  if (Array.isArray(validate)) {\n    return !!validate.find(function (it) {\n      return it.isRequired;\n    });\n  }\n\n  return false;\n};\nexport var FormField = function (_a) {\n  var id = _a.id,\n      input = _a.input,\n      validate = _a.validate,\n      props = __rest(_a, [\"id\", \"input\", \"validate\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.log('FormField is deprecated, use the useInput hook instead.');\n  }\n\n  var sanitizedValidate = Array.isArray(validate) ? composeValidators(validate) : validate;\n  var finalId = id || props.source;\n  return input ? // An ancestor is already decorated by Field\n  React.createElement(props.component, __assign({\n    input: input,\n    id: finalId\n  }, props)) : React.createElement(Field, __assign({}, props, {\n    id: finalId,\n    name: props.source,\n    isRequired: isRequired(validate),\n    validate: sanitizedValidate\n  }));\n};\nFormField.propTypes = {\n  defaultValue: PropTypes.any,\n  source: PropTypes.string,\n  validate: PropTypes.oneOfType([PropTypes.func, PropTypes.array])\n};\nexport default FormField;","map":null,"metadata":{},"sourceType":"module"}