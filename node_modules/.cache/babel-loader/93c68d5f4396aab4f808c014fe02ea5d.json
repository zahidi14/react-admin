{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles, InputAdornment } from '@material-ui/core';\nimport { useTranslate } from 'ra-core';\nimport TextInput from './TextInput';\nvar useStyles = makeStyles({\n  input: {\n    marginTop: 32\n  }\n});\n\nvar SearchInput = function (_a) {\n  var classesOverride = _a.classes,\n      props = __rest(_a, [\"classes\"]);\n\n  var translate = useTranslate();\n  var classes = useStyles({\n    classes: classesOverride\n  });\n  return React.createElement(TextInput, __assign({\n    hiddenLabel: true,\n    label: \"\",\n    placeholder: translate('ra.action.search'),\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\"\n      }, React.createElement(SearchIcon, {\n        color: \"disabled\"\n      }))\n    },\n    className: classes.input\n  }, props));\n};\n\nSearchInput.propTypes = {\n  classes: PropTypes.object\n};\nexport default SearchInput;","map":null,"metadata":{},"sourceType":"module"}